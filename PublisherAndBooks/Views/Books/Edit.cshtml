@model PublisherAndBooks.ViewModels.BookViewModel
@{
    ViewBag.Title = "Edit";
}

@using (Html.BeginForm("Edit", "Books", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken() // Server Other field not add
    @Html.HiddenFor(x => x.BookId)
    <div class="row">
        <div class="col-12">
            <h3 class="text-danger">Are you sure Edit<span class="display-6 text-info"> @Html.DisplayFor(x => x.Title) </span> </h3>
        </div>
    </div>
    <div class="form-group row mb-1">
        @Html.LabelFor(x => x.Title, new { @class = "col-form-label col-form-label-sm col-2 text-end" })
        <div class="col-5">
            @Html.TextBoxFor(x => x.Title, new { @class = "form-control form-control-sm" })
            @Html.ValidationMessageFor(x => x.Title, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group row mb-1">
        @Html.LabelFor(x => x.Genre, new { @class = "col-form-label col-form-label-sm col-2 text-end" })
        <div class="col-5">
            @Html.TextBoxFor(x => x.Genre, new { @class = "form-control form-control-sm" })
            @Html.ValidationMessageFor(x => x.Genre, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group row mb-1">
        @Html.LabelFor(x => x.Rating, new { @class = "col-form-label col-form-label-sm col-2 text-end" })
        <div class="col-5">
            @Html.TextBoxFor(x => x.Rating, new { @class = "form-control form-control-sm" })
            @Html.ValidationMessageFor(x => x.Rating, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group row mb-1">
        @Html.LabelFor(x => x.Publish, new { @class = "col-form-label col-form-label-sm col-2 text-end" })
        <div class="col-5">
            @Html.TextBoxFor(x => x.Publish, new { @class = "form-control form-control-sm" })
            @Html.ValidationMessageFor(x => x.Publish, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group row mb-1">
        @Html.LabelFor(x => x.PublisherID, new { @class = "col-form-label col-form-label-sm col-2 text-end" })
        <div class="col-5">
            @Html.DropDownListFor(x => x.PublisherID, new SelectList(ViewBag.Publishers, "PublisherID", "PublisherName"), "--Select--", new { @class = "form-select form-select-sm" })
            @Html.ValidationMessageFor(x => x.PublisherID, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group row mb-1">
        @Html.LabelFor(x => x.Picture, new { @class = "col-form-label col-form-label-sm col-2 text-end" })
        <div class="col-5">
            @Html.TextBoxFor(x => x.Picture, new { @class = "form-control form-control-sm", type = "file" })
            @Html.ValidationMessageFor(x => x.Picture, "", new { @class = "text-danger" })
        </div>
        <div class="col-1">
            <img src="~/Pictures/@ViewBag.Pic" width="30" class="img-thumbnail rounded-2" />
        </div>
    </div>
    <div class="form-group row mb-1">
        <div class="col-5 offset-2">
            <button type="submit" class="btn btn-success text-end">Update</button>
        </div>
    </div>
    <div class="row">
        @Html.ActionLink("Back to List", "Index")
    </div>
}


@section styles{

    <link href="~/Content/bootstrap-datepicker.standalone.css" rel="stylesheet" />
}
@section scripts{
    <script src="~/Scripts/jquery-3.6.0.js"></script>
    <script src="~/Scripts/jquery.validate.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.js"></script>
    <script src="~/Scripts/bootstrap-datepicker.js"></script>
    <script src="~/Scripts/jquery.daterangepicker/daterangepicker.jQuery.js"></script>
    <script>
        $("#Publish").datepicker({
            format: 'yyyy-mm-dd'
        })
    </script>
}